fib :: (n: int) -> int do
    z: int
    a := 0
    b := 1
    i := 0

    while i < n do
        z = a + b
        a = b
        b = z
        i = i + 1
    end

    return a
end

fact :: (n: int) -> int do
    if n == 0 then
        return 1
    end
    return n * fact(n - 1)
end

hanoi :: (n: int, fromrod: int, torod: int, auxrod: int) do
    if (n == 1) then
        return
    end

    hanoi(n - 1, fromrod, auxrod, torod);
    hanoi(n - 1, auxrod, torod, fromrod);
end

main :: () -> int do
    n := 6
    print("fact %d = %d%n", n, fact(n))
    return 0
end

#extern print :: (fmt: str, e: $$ #unchecked) -> void
