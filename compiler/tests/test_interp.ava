append :: (a : [] int, x : int) -> int do
    z := a[1] + 2
    return z
end

abs :: (value: int) -> int do
    if value < 0 then
        return -value
    end
    return value
end

abss :: (x: int) -> int do
    if x < 0 then
        return -x
    else
        return x
    end
end

main :: (y: [] int) -> int do
    x: int = 2
    z: float = 1
    implicit := 89

    v: int
    v = implicit

    fixed : [] of int = (1, 2)

    a := (1, 2, 3)

    v = a[2]

    b : [] of int
    c : [10] of int

    static :: [10] of int
    append(static, 12)

    if x == y[0] then
        print("Hello Word!")
    elsif x < 0 then
        print("x < 0")
    else
        print("this is not allowed")
        return 0
    end
    return 1
end
